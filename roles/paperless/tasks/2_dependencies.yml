---
# Network ---------------------------------------------------------------------
- name: Ensure custom Podman network exists
  containers.podman.podman_network:
    name: "{{ paperless_network }}"
    state: present
  become: true

# Redis -----------------------------------------------------------------------
- name: Ensure Redis image is present
  containers.podman.podman_image:
    name: "{{ paperless_redis_image }}"
  become: true

- name: Create Redis container (broker)
  containers.podman.podman_container:
    name: paperless-broker
    image: "{{ paperless_redis_image }}"
    state: created
    publish:
      - "6380:6379"
    volume:
      - "{{ paperless_base }}/redisdata:/data:Z"
    restart_policy: always
    network: "{{ paperless_network }}"
  become: true

# PostgreSQL -------------------------------------------------------------------
- name: Ensure PostgreSQL image is present
  containers.podman.podman_image:
    name: "{{ paperless_postgres_image }}"
  become: true

- name: Create PostgreSQL container (db)
  containers.podman.podman_container:
    name: paperless-db
    image: "{{ paperless_postgres_image }}"
    state: created
    volume:
      - "{{ paperless_base }}/pgdata:/var/lib/postgresql/data:Z"
    env:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    restart_policy: always
    network: "{{ paperless_network }}"
  become: true

# Gotenberg --------------------------------------------------------------------
- name: Ensure Gotenberg image is present
  containers.podman.podman_image:
    name: "{{ paperless_gotenberg_image }}"
  become: true

- name: Create Gotenberg container
  containers.podman.podman_container:
    name: paperless-gotenberg
    image: "{{ paperless_gotenberg_image }}"
    state: created
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    restart_policy: always
    network: "{{ paperless_network }}"
  become: true

# Tika ------------------------------------------------------------------------
- name: Ensure Tika image is present
  containers.podman.podman_image:
    name: ghcr.io/paperless-ngx/tika:latest
  become: true

- name: Create Tika container
  containers.podman.podman_container:
    name: paperless-tika
    image: ghcr.io/paperless-ngx/tika:latest
    state: created
    restart_policy: always
    network: "{{ paperless_network }}"
  become: true
