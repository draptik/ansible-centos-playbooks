#!/bin/bash

# ==== Usage Check ====
if [[ -z "$1" ]]; then
  echo "Usage: $0 <backup-target-name>"
  echo "Example: $0 readeck"
  exit 1
fi

TARGET="$1"

# ==== Configuration ====
LOCAL_REPO="/volume1/backup/restic-${TARGET}"
PCLOUD_REPO="rclone:pcloud:backups/restic-${TARGET}"
RESTIC_PASSWORD_FILE="$HOME/restic/restic-password-${TARGET}"
LOG_FILE="$HOME/restic-logs/restic-${TARGET}.log"

# ==== Timestamped logger ====
log() {
  local timestamp
  timestamp="$(date '+%Y-%m-%d %H:%M:%S')"
  echo "[$timestamp] $*" | tee -a "$LOG_FILE"
}

# ==== Pre-flight checks ====
if ! command -v restic >/dev/null; then
  log "‚ùå Error: restic is not installed."
  exit 1
fi

if [[ ! -f "$RESTIC_PASSWORD_FILE" ]]; then
  log "‚ùå Error: Password file not found at $RESTIC_PASSWORD_FILE"
  exit 1
fi

# ==== Export env ====
export RESTIC_PASSWORD_FILE="$RESTIC_PASSWORD_FILE"
export RESTIC_FROM_PASSWORD_FILE="$RESTIC_PASSWORD_FILE"

# ==== Ensure target repo exists ====
log "üîç Checking if target Restic repo at $PCLOUD_REPO exists..."
if ! restic -r "$PCLOUD_REPO" snapshots >/dev/null 2>&1; then
  log "‚ö†Ô∏è  Target repo not found. Initializing..."
  if restic -r "$PCLOUD_REPO" init >>"$LOG_FILE" 2>&1; then
    log "‚úÖ Initialized new Restic repo at $PCLOUD_REPO."
  else
    log "‚ùå Failed to initialize target repo. Aborting."
    exit 2
  fi
else
  log "‚úÖ Target repo already exists."
fi

# ==== Run copy ====
log "üöÄ Starting restic snapshot copy from $LOCAL_REPO to $PCLOUD_REPO"
restic -r "$PCLOUD_REPO" copy --from-repo "$LOCAL_REPO" 2>&1 | while IFS= read -r line; do log "$line"; done

RETVAL=${PIPESTATUS[0]}

if [[ $RETVAL -eq 0 ]]; then
  log "‚úÖ Restic snapshots successfully copied to pCloud."
else
  log "‚ùå Restic copy failed. Exit code: $RETVAL"
fi

exit "$RETVAL"
